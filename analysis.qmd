---
title: Analysis
description: Here we provide a detailed analysis using more sophisticated statistics techniques.
toc: true
draft: false
---

![](images/college_scorecard.png)

This comes from the file `analysis.qmd`.

## Motivation Behind Data Analysis
#### Variables and Relationships of Interest

This analysis aims to investigate the relationships between traditional predictors of success, assessed prior to college, and academic indicators of success, measured post-college, with a focus on the moderating effect of racial demographics.

#### Key Questions

1. How do academic indicators of success — completion rates, post-college earnings, and median student loan debt — vary across racial groups and the racial composition of schools?

2. Does there exist a relationship between traditional predictors of academic success, such as SAT scores and the prestige of universities (measured by acceptance rate percentages) and post-college earnings?
```{r}
suppressWarnings(suppressMessages(library(tidyverse)))
suppressWarnings(suppressMessages(library(ggplot2)))
suppressWarnings(suppressMessages(library(readr)))
suppressWarnings(suppressMessages(library(dplyr)))
```

## 1. Initial Analysis of Race-Based Completion Rates Across Universities 
```{r}
education_data <- read_rds("dataset/education_cohort_data_cleaned.rds") |>
  filter(State == "MA") |>
  pivot_longer(cols = c(White_Compl_Rate, Black_Compl_Rate, Hisp_Compl_Rate, 
                        Asian_Compl_Rate, Asian_Am_Pac_Islander_Compl_Rate, 
                        Native_Am_Pac_Islander_Compl_Rate, Two_Or_More_Races_Compl_Rate),
               names_to = "Race", values_to = "Completion_Rate")

ggplot(education_data, aes(x = Completion_Rate, y = Race)) +
  geom_point(aes(color = Race), size = 2, alpha = 0.49) + 
  stat_summary(aes(x = Completion_Rate, y = Race), 
               fun = mean, geom = "point", size = 4, color = "black", alpha = 0.4) +  # Mean as larger black dots
  labs(title = "Completion Rates Across MA Universities by Race",
       subtitle = "Each data value represents each universities' completion rates",
       x = "Completion Rate",
       y = "") +
  theme_minimal() +
  scale_color_viridis_d() +
  theme(legend.position = "none") 
```

```{r}
education_data <- read_rds("dataset/education_cohort_data_cleaned.rds") |>
  filter(State == "CA") |>
  pivot_longer(cols = c(White_Compl_Rate, Black_Compl_Rate, Hisp_Compl_Rate, 
                        Asian_Compl_Rate, Asian_Am_Pac_Islander_Compl_Rate, 
                        Native_Am_Pac_Islander_Compl_Rate, Two_Or_More_Races_Compl_Rate),
               names_to = "Race", values_to = "Completion_Rate")

ggplot(education_data, aes(x = Completion_Rate, y = Race)) +
  geom_point(aes(color = Race), size = 2, alpha = 0.49) + 
  stat_summary(aes(x = Completion_Rate, y = Race), 
               fun = mean, geom = "point", size = 4, color = "black", alpha = 0.4) +  # Mean as larger black dots
  labs(title = "Completion Rates Across CA Universities by Race",
       subtitle = "Each data value represents each universities' completion rates",
       x = "Completion Rate",
       y = "") +
  theme_minimal() +
  scale_color_viridis_d() +
  theme(legend.position = "none")  

```

```{r}
education_data <- read_rds("dataset/education_cohort_data_cleaned.rds") |>
  filter(State == "TX") |>
  pivot_longer(cols = c(White_Compl_Rate, Black_Compl_Rate, Hisp_Compl_Rate, 
                        Asian_Compl_Rate, Asian_Am_Pac_Islander_Compl_Rate, 
                        Native_Am_Pac_Islander_Compl_Rate, Two_Or_More_Races_Compl_Rate),
               names_to = "Race", values_to = "Completion_Rate")

ggplot(education_data, aes(x = Completion_Rate, y = Race)) +
  geom_point(aes(color = Race), size = 2, alpha = 0.49) + 
  stat_summary(aes(x = Completion_Rate, y = Race), 
               fun = mean, geom = "point", size = 4, color = "black", alpha = 0.4) +  # Mean as larger black dots
  labs(title = "Completion Rates Across TX Universities by Race",
       subtitle = "Each data value represents each universities' completion rates",
       x = "Completion Rate",
       y = "") +
  theme_minimal() +
  scale_color_viridis_d() +
  theme(legend.position = "none") 
```

## 2. Maps
```{r}
library(tidyverse)
library(sf) # For geospatial data
library(ggplot2) # For visualization
library(ggthemes) # For better visual themes
library(maps) # For US state boundaries

# Summarize the racial demographics by state
education_data <- read_rds("dataset/education_cohort_data_cleaned.rds")

# Summarize racial demographics by state
state_race_summary <- education_data %>%
  group_by(State) %>%
  summarise(
    Avg_Perc_White = mean(Perc_Undergrad_White, na.rm = TRUE),
    Avg_Perc_Black = mean(Perc_Undergrad_Black, na.rm = TRUE),
    Avg_Perc_Hispanic = mean(Perc_Undergrad_Hispanic, na.rm = TRUE),
    Avg_Perc_Asian = mean(Perc_Undergrad_Asian, na.rm = TRUE),
    Avg_Perc_Am_Indian_Alask_Native = mean(Perc_Undergrad_Am_Indian_Alask_Native, na.rm = TRUE),
    Avg_Perc_Two_Or_More_Races = mean(Perc_Two_Or_More_Races, na.rm = TRUE)
  )

# Add full state names to match map data
state_race_summary <- state_race_summary %>%
  mutate(region = tolower(state.name[match(State, state.abb)]))

# Check for any unmatched states
unmatched_states <- state_race_summary %>% filter(is.na(region))
print(unmatched_states) # Should be empty; if not, investigate State abbreviations.

# Load U.S. map data
us_map <- map_data("state")

# Join summarized data with the U.S. map data
race_map_data <- left_join(us_map, state_race_summary, by = "region")

# Check for missing data after the join
missing_data <- race_map_data %>%
  filter(is.na(Avg_Perc_Black))
print(missing_data) # If rows exist, some regions are unmatched.

# Plot the proportion of Black undergraduate students by state
ggplot(data = race_map_data, aes(x = long, y = lat, group = group, fill = Avg_Perc_Black)) +
  geom_polygon(color = "white", size = 0.2) +
  coord_fixed(1.3) +
  scale_fill_viridis_c(option = "C") +
  labs(
    title = "Proportion of Black Undergraduate Students by State",
    fill = "Proportion (%)"
  ) +
  theme_minimal() +
  theme(
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank()
  )
```

```{r}
education_data <- read_rds("dataset/education_cohort_data_cleaned.rds")

# Load U.S. map data
us_map <- map_data("state")

# Convert Med_earnings and Med_Loan_Debt to numeric
education_data <- education_data %>%
  mutate(
    Med_earnings = as.numeric(Med_earnings),
    Med_Loan_Debt = as.numeric(Med_Loan_Debt)
  )

# Summarize earnings and racial data by state
state_earnings_summary <- education_data %>%
  group_by(State) %>%
  summarise(
    Median_Earnings = mean(Med_earnings, na.rm = TRUE),
    Median_Loan_Debt = mean(Med_Loan_Debt, na.rm = TRUE),
    Avg_Perc_Black = mean(Perc_Undergrad_Black, na.rm = TRUE)
  ) %>%
  mutate(region = tolower(state.name[match(State, state.abb)])) # Map abbreviations to full state names

# Debug: Check for missing regions
missing_regions <- state_earnings_summary %>%
  filter(is.na(region))
print(missing_regions) # Should be empty

# Join summarized data with U.S. map data
earnings_map_data <- left_join(us_map, state_earnings_summary, by = "region")

# Debug: Check joined data
summary(earnings_map_data$Median_Earnings)

# Plot the map: Median Earnings by State
ggplot(data = earnings_map_data, aes(x = long, y = lat, group = group, fill = Median_Earnings)) +
  geom_polygon(color = "white", size = 0.2) +
  coord_fixed(1.3) +
  scale_fill_viridis_c(option = "C", na.value = "gray90") +
  labs(
    title = "Median Earnings by State (10 Years After College Entry)",
    fill = "Earnings ($)"
  ) +
  theme_minimal() +
  theme(
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank()
  )
```

```{r}
# Load required libraries
library(shiny)
library(tidyverse)
library(maps)

# Load the U.S. map data
us_map <- map_data("state")

# Load the education dataset
education_data <- readRDS("dataset/education_cohort_data_cleaned.rds")

# Convert racial earnings columns to numeric
education_data <- education_data %>%
  mutate(
    Earn_White = as.numeric(Perc_Undergrad_White) * as.numeric(Med_earnings),
    Earn_Black = as.numeric(Perc_Undergrad_Black) * as.numeric(Med_earnings),
    Earn_Hispanic = as.numeric(Perc_Undergrad_Hispanic) * as.numeric(Med_earnings),
    Earn_Asian = as.numeric(Perc_Undergrad_Asian) * as.numeric(Med_earnings),
    Earn_Two_Or_More_Races = as.numeric(Perc_Two_Or_More_Races) * as.numeric(Med_earnings)
  )

# Summarize earnings data by state
state_earnings_summary <- education_data %>%
  group_by(State) %>%
  summarise(
    Total_Earnings = sum(as.numeric(Med_earnings), na.rm = TRUE),
    Earn_White = sum(Earn_White, na.rm = TRUE),
    Earn_Black = sum(Earn_Black, na.rm = TRUE),
    Earn_Hispanic = sum(Earn_Hispanic, na.rm = TRUE),
    Earn_Asian = sum(Earn_Asian, na.rm = TRUE),
    Earn_Two_Or_More_Races = sum(Earn_Two_Or_More_Races, na.rm = TRUE)
  ) %>%
  mutate(
    Prop_Earn_White = Earn_White / Total_Earnings,
    Prop_Earn_Black = Earn_Black / Total_Earnings,
    Prop_Earn_Hispanic = Earn_Hispanic / Total_Earnings,
    Prop_Earn_Asian = Earn_Asian / Total_Earnings,
    Prop_Earn_Two_Or_More_Races = Earn_Two_Or_More_Races / Total_Earnings,
    region = tolower(state.name[match(State, state.abb)]) # Map state abbreviations to full state names
  )

# Join summarized data with U.S. map data
earnings_map_data <- left_join(us_map, state_earnings_summary, by = "region")

# UI definition
ui <- fluidPage(
  titlePanel("Interactive Proportion of Earnings by Race Across States"),
  sidebarLayout(
    sidebarPanel(
      helpText("Select a race to view its earnings proportion relative to total earnings by state."),
      selectInput(
        "race_variable",
        "Select Race to Display on the Map",
        choices = c(
          "White" = "Prop_Earn_White",
          "Black" = "Prop_Earn_Black",
          "Hispanic" = "Prop_Earn_Hispanic",
          "Asian" = "Prop_Earn_Asian",
          "Two or More Races" = "Prop_Earn_Two_Or_More_Races"
        ),
        selected = "Prop_Earn_White"
      )
    ),
    mainPanel(
      plotOutput("earningsMap", height = "700px", hover = hoverOpts("hover_info")),
      textOutput("hover_text")
    )
  )
)

# Server logic
server <- function(input, output, session) {
  
  # Render the map based on user input
  output$earningsMap <- renderPlot({
    race_column <- input$race_variable
    ggplot(data = earnings_map_data, 
           aes(x = long, y = lat, group = group, fill = .data[[race_column]])) +
      geom_polygon(color = "white", size = 0.2) +
      coord_fixed(1.3) +
      scale_fill_viridis_c(
        option = "C", 
        na.value = "gray90", 
        name = paste("Prop. of Earnings:", gsub("Prop_Earn_", "", race_column))
      ) +
      labs(
        title = "Proportion of Earnings by Race Across States",
        fill = "Proportion"
      ) +
      theme_minimal() +
      theme(
        axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank()
      )
  })
  
  # Display hover information
  output$hover_text <- renderText({
    hover <- input$hover_info
    if (is.null(hover)) return("Hover over a state to see its earnings breakdown.")
    
    # Find the closest region to the mouse pointer
    state_hovered <- earnings_map_data %>%
      filter(
        long >= hover$x - 0.1 & long <= hover$x + 0.1,
        lat >= hover$y - 0.1 & lat <= hover$y + 0.1
      ) %>%
      distinct(region, Prop_Earn_White, Prop_Earn_Black, Prop_Earn_Hispanic, Prop_Earn_Asian, Prop_Earn_Two_Or_More_Races) %>%
      head(1)
    
    if (nrow(state_hovered) == 0) return("Hover over a state to see its earnings breakdown.")
    
    state_info <- state_hovered[1, ]
    
    paste0(
      "State: ", tools::toTitleCase(state_info$region), "\n",
      "Prop. of Earnings - White: ", round(state_info$Prop_Earn_White * 100, 2), "%\n",
      "Prop. of Earnings - Black: ", round(state_info$Prop_Earn_Black * 100, 2), "%\n",
      "Prop. of Earnings - Hispanic: ", round(state_info$Prop_Earn_Hispanic * 100, 2), "%\n",
      "Prop. of Earnings - Asian: ", round(state_info$Prop_Earn_Asian * 100, 2), "%\n",
      "Prop. of Earnings - Two or More Races: ", round(state_info$Prop_Earn_Two_Or_More_Races * 100, 2), "%"
    )
  })
}

# Run the application
shinyApp(ui = ui, server = server)
```










We describe here our detailed data analysis. This page will provide an overview of what questions you addressed, illustrations of relevant aspects of the data with tables and figures, and a statistical model that attempts to answer part of the question. You'll also reflect on next steps and further analysis.

The audience for this page is someone like your class mates, so you can expect that they have some level of statistical and quantitative sophistication and understand ideas like linear and logistic regression, coefficients, confidence intervals, overfitting, etc. 

While the exact number of figures and tables will vary and depend on your analysis, you should target around 5 to 6. An overly long analysis could lead to losing points.
If you want you can link back to your blog posts or create separate pages with more details.

The style of this paper should aim to be that of an academic paper. 
I don't expect this to be of publication quality but you should keep that aim in mind.
Avoid using "we" too frequently, for example "We also found that ...". Describe your methodology and your findings but don't describe your whole process.

### Example of loading data

The code below shows an example of loading the loan refusal data set (which you should delete at some point).

```{r}
library(tidyverse)
print(getwd())
data <- read_rds(here::here("dataset/loan_refusal_clean.rds"))
```

## Note on Attribution

In general, you should try to provide links to relevant resources, especially those that helped you. You don't have to link to every StackOverflow post you used but if there are explainers on aspects of the data or specific models that you found helpful, try to link to those. Also, try to link to other sources that might support (or refute) your analysis. These can just be regular hyperlinks. You don't need a formal citation.

If you are directly quoting from a source, please make that clear. You can show quotes using `>` like this

```         
> To be or not to be.
```

> To be or not to be.

------------------------------------------------------------------------

## Rubric: On this page

You will

-   Introduce what motivates your Data Analysis (DA)
    -   Which variables and relationships are you most interested in?
    -   What questions are you interested in answering?
    -   Provide context for the rest of the page. This will include figures/tables that illustrate aspects of the data of your question.
-   Modeling and Inference
    -   The page will include some kind of formal statistical model. This could be a linear regression, logistic regression, or another modeling framework.
    -   Explain the ideas and techniques you used to choose the predictors for your model. (Think about including interaction terms and other transformations of your variables.)
    -   Describe the results of your modelling and make sure to give a sense of the uncertainty in your estimates and conclusions.
-   Explain the flaws and limitations of your analysis
    -   Are there some assumptions that you needed to make that might not hold? Is there other data that would help to answer your questions?
-   Clarity Figures
    -   Are your figures/tables/results easy to read, informative, without problems like overplotting, hard-to-read labels, etc?
    -   Each figure should provide a key insight. Too many figures or other data summaries can detract from this. (While not a hard limit, around 5 total figures is probably a good target.)
    -   Default `lm` output and plots are typically not acceptable.
-   Clarity of Explanations
    -   How well do you explain each figure/result?
    -   Do you provide interpretations that suggest further analysis or explanations for observed phenomenon?
-   Organization and cleanliness.
    -   Make sure to remove excessive warnings, hide most or all code, organize with sections or multiple pages, use bullets, etc.
    -   This page should be self-contained, i.e. provide a description of the relevant data.
